/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sisconpcpk.visao;

import br.com.sisconpcpk.controle.ControlePesquisarEmpresaLogon;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import br.com.sisconpcpk.controle.LimiteDigitosMinCpk;
import br.com.sisconpcpk.dao.ConectaBanco;
import br.com.sisconpcpk.dao.ControleVerificacaoAcessos;
import br.com.sisconpcpk.modelo.ControleVersao;
import br.com.sisconpcpk.modelo.EmpresaUnidade;
import br.com.sisconpcpk.modelo.ParametrosCrc;
import br.com.sisconpcpk.modelo.UsuariosCpk;
import br.com.sisconpcpk.util.Criptografia;
import static br.com.sisconpcpk.dao.ConectaBanco.caminhoConecta;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Ronaldo
 */
// Inicio do desenvolvimento 31/07/2017 - AS 15:17:54
public class TelaLoginSenhaCPK extends javax.swing.JDialog {

    UsuariosCpk objUsuarios = new UsuariosCpk();
    ControleVersao versao = new ControleVersao();
    EmpresaUnidade objEmpresa = new EmpresaUnidade();
    ParametrosCrc objParametros = new ParametrosCrc();

    public static int Codstatus;
    public static String idUserAcesso; // CÓDIGO DO USUÁRIO PERMISSÕES DE ACESSO (24/04/2016)
    public static String nameUser; // Variavel para o nome do usuário logado
    public static String login;
    public static String senha;
    public static long tamanhoOrigem, tamanhoDestino;
    public static long dataOrigem, dataDestino;
    // NOME DA EMPRESA E UNIDADE PENAL PARA SER UTILIZADO NA TELA PRINCIPAL E NOS RELATÓRIOS
    public static String razaoSocial;
    public static String descricaoUnidade;
    public static Double versaoAtualSistema;
    public static String enderecoUnidadePrisional;
    String bairroUnidade;
    String cidadeUnidade;
    String estadoUnidade;
    //
    String caminhoExecutavel = "";
    String caminhoExecutavelAntigo = "";
    String dataVersao;
    String pSISTEMA_MANUTENCAO = "";
    //
    public static int pID_usuario = 0;
    String pLOGIN_usuario = "";
    String pNOME_usuario = "";
    String pSENHA_usuario = "";
    Date pDATA_cadastro;
    String pSENHA1_CRIPTOGRAFA;
    public static int codigoEmpresa = 0;

    /**
     * Creates new form TelaLoginSenha
     *
     * @param parent
     * @param modal
     */
    public TelaLoginSenhaCPK(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        // Modelo de resolução de tela no Windows
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e) {
        }
        initComponents();
        formatarCampos();
        // Modificar a tecla tab por enter
        HashSet conj = new HashSet(this.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        this.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPassword = new javax.swing.JPasswordField();
        jLogin = new javax.swing.JTextField();
        jBtCancelar = new javax.swing.JButton();
        jBtAcessar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxUnidadePrisional = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jNumeroVersao = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::: Tela de Acesso :::...");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/br/com/sisconpcpk/imagens/FavonIconJFrame100.png")));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Senha:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Usuário:");

        jPassword.setToolTipText("Informe Senha");
        jPassword.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordKeyPressed(evt);
            }
        });

        jLogin.setToolTipText("Informe Nome de Usuário");
        jLogin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLoginKeyPressed(evt);
            }
        });

        jBtCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sisconpcpk/imagens/shutdown-icone-6920-32.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar operação");
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtAcessar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBtAcessar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sisconpcpk/imagens/Botoes_Site_5745_Knob_Valid_Green(1).png"))); // NOI18N
        jBtAcessar.setText("Acessar");
        jBtAcessar.setToolTipText("Acessar sistema");
        jBtAcessar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAcessarActionPerformed(evt);
            }
        });
        jBtAcessar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBtAcessarKeyPressed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sisconpcpk/imagens/User_login_Icon_64.png"))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 0, 0));
        jLabel9.setText("Unidade:");

        jComboBoxUnidadePrisional.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxUnidadePrisional.setForeground(new java.awt.Color(204, 0, 0));
        jComboBoxUnidadePrisional.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "localhost", "Conjunto Penal de lauro de Freitas - CPLF", "Conjunto Penal Masculino de Salvador - CPMS", "Conjunto Penal de Itabuna - CPIT", "Conjunto Penal de Vitória da Conquista - CPVC", "Conjunto Penal de Barreiras - CPBA" }));
        jComboBoxUnidadePrisional.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxUnidadePrisional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUnidadePrisionalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBtAcessar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtCancelar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                            .addComponent(jPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBoxUnidadePrisional, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAcessar, jBtCancelar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBoxUnidadePrisional, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtAcessar)
                    .addComponent(jBtCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAcessar, jBtCancelar});

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("SISCONP - Sistema de Controle Prisional");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Versão:");

        jNumeroVersao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jNumeroVersao.setForeground(new java.awt.Color(255, 0, 0));
        jNumeroVersao.setText("6.12.2020");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Divisão de Segurança - Controle de Pagamento de Kit e Confere de Internos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNumeroVersao, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jNumeroVersao))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sisconpcpk/imagens/11504_128x128.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sisconpcpk/imagens/191216082332_64.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtAcessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAcessarActionPerformed
        // TODO add your handling code here:     
        if (jLogin.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Login não pode ser em branco.");
        } else if (jPassword.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Senha não pode ser em branco.");
        } else {
            try {
                acessarSistema();
            } catch (SQLException ex) {
                Logger.getLogger(TelaLoginSenhaCPK.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jBtAcessarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLoginKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jPassword.requestFocus();
        }
    }//GEN-LAST:event_jLoginKeyPressed

    private void jPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                acessarSistema();
            } catch (SQLException ex) {
                Logger.getLogger(TelaLoginSenhaCPK.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jPasswordKeyPressed

    private void jBtAcessarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtAcessarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtAcessarKeyPressed

    private void jComboBoxUnidadePrisionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUnidadePrisionalActionPerformed
        jBtAcessar.requestFocus();
    }//GEN-LAST:event_jComboBoxUnidadePrisionalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaLoginSenhaCPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaLoginSenhaCPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaLoginSenhaCPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaLoginSenhaCPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaLoginSenhaCPK dialog = new TelaLoginSenhaCPK(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jBtAcessar;
    public static javax.swing.JButton jBtCancelar;
    public static javax.swing.JComboBox<String> jComboBoxUnidadePrisional;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jLogin;
    private javax.swing.JLabel jNumeroVersao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    public static javax.swing.JPasswordField jPassword;
    // End of variables declaration//GEN-END:variables

    public void acessarSistema() throws SQLException {
        if (jComboBoxUnidadePrisional.getSelectedItem().equals("Selecione...")) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma unidade prisional para acessar.");
        } else if (jComboBoxUnidadePrisional.getSelectedItem().equals("localhost")) {
            caminhoConecta = "C:\\SISCONPcpk\\Conecta.properties";
            BUSCAR_usuarios();
            BUSCAR_data();
            pSENHA1_CRIPTOGRAFA = Criptografia.criptografar(jPassword.getText());
            if (jLogin.getText().equals(pLOGIN_usuario)
                    && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                    && Codstatus == 0) {
                JOptionPane.showMessageDialog(null, "Usuário INATIVO !!!");
            } else {
                if (jLogin.getText().equals(pLOGIN_usuario)
                        && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                        && (Codstatus == 1)) {
                    buscarEmpresa();
                    // COMPARAR O ARQUIVO EXECUTAVEL PARA REALIZAR ATUALIZAÇÃO
                    if (caminhoExecutavelAntigo == null) {
                        JOptionPane.showMessageDialog(rootPane, "O caminho do arquivo executável antigo não existe, solicite ajuda ao Administrador do Sistema.");
                    } else if (pSISTEMA_MANUTENCAO.equals("Sim") && !jLogin.getText().equals("admin")) {
                        JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, o sistema está temporariamente em manutenção, favor aguardar...");
                    } else {
                        idUserAcesso = String.valueOf(pID_usuario);
                        nameUser = pNOME_usuario;
                        FormPrincipal tlp = new FormPrincipal();
                        tlp.setVisible(true);
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Usuario ou senha Inváldo, tente novamente !!!");
                    jLogin.setText("");
                    jPassword.setText("");
                }
            }
        } else if (jComboBoxUnidadePrisional.getSelectedItem().equals("Conjunto Penal de lauro de Freitas - CPLF")) {
            caminhoConecta = "C:\\SISCONPcpk\\ConectaLF.properties";
            BUSCAR_usuarios();
            BUSCAR_data();
            pSENHA1_CRIPTOGRAFA = Criptografia.criptografar(jPassword.getText());
            if (jLogin.getText().equals(pLOGIN_usuario)
                    && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                    && Codstatus == 0) {
                JOptionPane.showMessageDialog(null, "Usuário INATIVO !!!");
            } else {
                if (jLogin.getText().equals(pLOGIN_usuario)
                        && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                        && (Codstatus == 1)) {
                    buscarEmpresa();
                    // COMPARAR O ARQUIVO EXECUTAVEL PARA REALIZAR ATUALIZAÇÃO
                    if (caminhoExecutavelAntigo == null) {
                        JOptionPane.showMessageDialog(rootPane, "O caminho do arquivo executável antigo não existe, solicite ajuda ao Administrador do Sistema.");
                    } else if (pSISTEMA_MANUTENCAO.equals("Sim") && !jLogin.getText().equals("admin")) {
                        JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, o sistema está temporariamente em manutenção, favor aguardar...");
                    } else {
                        idUserAcesso = String.valueOf(pID_usuario);
                        nameUser = pNOME_usuario;
                        FormPrincipal tlp = new FormPrincipal();
                        tlp.setVisible(true);
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Usuario ou senha Inváldo, tente novamente !!!");
                    jLogin.setText("");
                    jPassword.setText("");
                }
            }
        } else if (jComboBoxUnidadePrisional.getSelectedItem().equals("Conjunto Penal Masculino de Salvador - CPMS")) {
            caminhoConecta = "C:\\SISCONPcpk\\ConectaSSA.properties";
            BUSCAR_usuarios();
            BUSCAR_data();
            pSENHA1_CRIPTOGRAFA = Criptografia.criptografar(jPassword.getText());
            if (jLogin.getText().equals(pLOGIN_usuario)
                    && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                    && Codstatus == 0) {
                JOptionPane.showMessageDialog(null, "Usuário INATIVO !!!");
            } else {
                if (jLogin.getText().equals(pLOGIN_usuario)
                        && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                        && (Codstatus == 1)) {
                    buscarEmpresa();
                    // COMPARAR O ARQUIVO EXECUTAVEL PARA REALIZAR ATUALIZAÇÃO
                    if (caminhoExecutavelAntigo == null) {
                        JOptionPane.showMessageDialog(rootPane, "O caminho do arquivo executável antigo não existe, solicite ajuda ao Administrador do Sistema.");
                    } else if (pSISTEMA_MANUTENCAO.equals("Sim") && !jLogin.getText().equals("admin")) {
                        JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, o sistema está temporariamente em manutenção, favor aguardar...");
                    } else {
                        idUserAcesso = String.valueOf(pID_usuario);
                        nameUser = pNOME_usuario;
                        FormPrincipal tlp = new FormPrincipal();
                        tlp.setVisible(true);
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Usuario ou senha Inváldo, tente novamente !!!");
                    jLogin.setText("");
                    jPassword.setText("");
                }
            }
        } else if (jComboBoxUnidadePrisional.getSelectedItem().equals("Conjunto Penal de Itabuna - CPIT")) {
            caminhoConecta = "C:\\SISCONPcpk\\ConectaITB.properties";
            BUSCAR_usuarios();
            BUSCAR_data();
            pSENHA1_CRIPTOGRAFA = Criptografia.criptografar(jPassword.getText());
            if (jLogin.getText().equals(pLOGIN_usuario)
                    && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                    && Codstatus == 0) {
                JOptionPane.showMessageDialog(null, "Usuário INATIVO !!!");
            } else {
                if (jLogin.getText().equals(pLOGIN_usuario)
                        && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                        && (Codstatus == 1)) {
                    buscarEmpresa();
                    // COMPARAR O ARQUIVO EXECUTAVEL PARA REALIZAR ATUALIZAÇÃO
                    if (caminhoExecutavelAntigo == null) {
                        JOptionPane.showMessageDialog(rootPane, "O caminho do arquivo executável antigo não existe, solicite ajuda ao Administrador do Sistema.");
                    } else if (pSISTEMA_MANUTENCAO.equals("Sim") && !jLogin.getText().equals("admin")) {
                        JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, o sistema está temporariamente em manutenção, favor aguardar...");
                    } else {
                        idUserAcesso = String.valueOf(pID_usuario);
                        nameUser = pNOME_usuario;
                        FormPrincipal tlp = new FormPrincipal();
                        tlp.setVisible(true);
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Usuario ou senha Inváldo, tente novamente !!!");
                    jLogin.setText("");
                    jPassword.setText("");
                }
            }
        } else if (jComboBoxUnidadePrisional.getSelectedItem().equals("Conjunto Penal de Vitória da Conquista - CPVC")) {
            caminhoConecta = "C:\\SISCONPcpk\\ConectaVC.properties";
            BUSCAR_usuarios();
            BUSCAR_data();
            pSENHA1_CRIPTOGRAFA = Criptografia.criptografar(jPassword.getText());
            if (jLogin.getText().equals(pLOGIN_usuario)
                    && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                    && Codstatus == 0) {
                JOptionPane.showMessageDialog(null, "Usuário INATIVO !!!");
            } else {
                if (jLogin.getText().equals(pLOGIN_usuario)
                        && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                        && (Codstatus == 1)) {
                    buscarEmpresa();
                    // COMPARAR O ARQUIVO EXECUTAVEL PARA REALIZAR ATUALIZAÇÃO
                    if (caminhoExecutavelAntigo == null) {
                        JOptionPane.showMessageDialog(rootPane, "O caminho do arquivo executável antigo não existe, solicite ajuda ao Administrador do Sistema.");
                    } else if (pSISTEMA_MANUTENCAO.equals("Sim") && !jLogin.getText().equals("admin")) {
                        JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, o sistema está temporariamente em manutenção, favor aguardar...");
                    } else {
                        idUserAcesso = String.valueOf(pID_usuario);
                        nameUser = pNOME_usuario;
                        FormPrincipal tlp = new FormPrincipal();
                        tlp.setVisible(true);
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Usuario ou senha Inváldo, tente novamente !!!");
                    jLogin.setText("");
                    jPassword.setText("");
                }
            }
        } else if (jComboBoxUnidadePrisional.getSelectedItem().equals("Conjunto Penal de Barreiras - CPBA")) {
            caminhoConecta = "C:\\SISCONPcpk\\ConectaBAR.properties";
            BUSCAR_usuarios();
            BUSCAR_data();
            pSENHA1_CRIPTOGRAFA = Criptografia.criptografar(jPassword.getText());
            if (jLogin.getText().equals(pLOGIN_usuario)
                    && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                    && Codstatus == 0) {
                JOptionPane.showMessageDialog(null, "Usuário INATIVO !!!");
            } else {
                if (jLogin.getText().equals(pLOGIN_usuario)
                        && (pSENHA_usuario).equals(pSENHA1_CRIPTOGRAFA)
                        && (Codstatus == 1)) {
                    buscarEmpresa();
                    // COMPARAR O ARQUIVO EXECUTAVEL PARA REALIZAR ATUALIZAÇÃO
                    if (caminhoExecutavelAntigo == null) {
                        JOptionPane.showMessageDialog(rootPane, "O caminho do arquivo executável antigo não existe, solicite ajuda ao Administrador do Sistema.");
                    } else if (pSISTEMA_MANUTENCAO.equals("Sim") && !jLogin.getText().equals("admin")) {
                        JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, o sistema está temporariamente em manutenção, favor aguardar...");
                    } else {
                        idUserAcesso = String.valueOf(pID_usuario);
                        nameUser = pNOME_usuario;
                        FormPrincipal tlp = new FormPrincipal();
                        tlp.setVisible(true);
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Usuario ou senha Inváldo, tente novamente !!!");
                    jLogin.setText("");
                    jPassword.setText("");
                }
            }
        }
    }

    public void formatarCampos() {
        jLogin.setDocument(new LimiteDigitosMinCpk(21));
        jPassword.setDocument(new LimiteDigitosMinCpk(21));
    }

    public void buscarEmpresa() {
        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
        //PESQUISAR DADOS DA EMPRESA
        ControlePesquisarEmpresaLogon pPESQUISAS_empresa = new ControlePesquisarEmpresaLogon();
        pPESQUISAS_empresa.PESQUISAR_empresa(objEmpresa);
        codigoEmpresa = objEmpresa.getIdEmpresa();
        razaoSocial = objEmpresa.getDescricaoEmpresa();
        descricaoUnidade = objEmpresa.getDescricaoUnidade();
        versaoAtualSistema = objEmpresa.getVersaoAtual();
        //ENDEREÇO PARA O RELATÓRIO DE CUMPRIMENTO E NÃO CUMPRIMENTO DE ALVARÁ. (02/03/2018) - BARREIRAS.
        pPESQUISAS_empresa.PESQUISAR_unidade(objEmpresa);
        enderecoUnidadePrisional = objEmpresa.getEndereco();
        bairroUnidade = objEmpresa.getBairro();
        cidadeUnidade = objEmpresa.getCidade();
        estadoUnidade = objEmpresa.getEstado();
        enderecoUnidadePrisional = enderecoUnidadePrisional + " " + cidadeUnidade + " " + estadoUnidade;
        //PESQUISAR DADOS DO PARAMÊTRO
        pPESQUISAS_empresa.PESQUISAR_parametros(objParametros);
        caminhoExecutavel = objParametros.getCaminhoAtualizaSis();
        caminhoExecutavelAntigo = objParametros.getCaminhoExecAntigo();
        dataVersao = formatoAmerica.format(objParametros.getDataVersao().getTime());
        pSISTEMA_MANUTENCAO = objParametros.getSistemaManutencao();
    }

    public void BUSCAR_usuarios() {
        ControleVerificacaoAcessos VERIFICAR_usuario = new ControleVerificacaoAcessos();
        try {
            for (UsuariosCpk dd : VERIFICAR_usuario.read()) {
                pID_usuario = dd.getIdUsuario();
                pLOGIN_usuario = dd.getLogin();
                pNOME_usuario = dd.getNomeUsuario();
                pSENHA_usuario = dd.getSenha1();
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaLoginSenhaCPK.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void BUSCAR_data() {
        ControlePesquisarEmpresaLogon p = new ControlePesquisarEmpresaLogon();
        p.PESQUISAR_data(objUsuarios);
        pDATA_cadastro = objUsuarios.getDataCadastro();
    }
}
